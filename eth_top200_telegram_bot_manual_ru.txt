
==============================
ПОШАГОВАЯ ИНСТРУКЦИЯ
==============================

Название проекта: Telegram‑бот «Топ‑200 кошельков по ETH»
----------------------------------------------------------

Цель:
------
Бот показывает в Telegram‑чате самые богатые 200 адресов Ethereum на момент запроса.

Источники данных:
1) Bitquery GraphQL API — основной источник (живые балансы ETH).
2) Etherscan — резервный источник (парсинг страницы Top Accounts).

----------------------------------------------------------
ШАГ 1. Подготовка
----------------------------------------------------------
1. Установите Python 3.10 или выше.
2. Скачайте архив проекта: **eth_top200_telegram_bot.zip**
3. Распакуйте архив в любую папку, например: `C:\eth_top200_bot`

----------------------------------------------------------
ШАГ 2. Создание виртуального окружения и установка зависимостей
----------------------------------------------------------
Откройте терминал / PowerShell и выполните команды:

### Windows:
```
cd C:\eth_top200_bot
python -m venv .venv
.venv\Scripts\activate
pip install -r requirements.txt
```

### Linux / macOS:
```
cd ~/eth_top200_bot
python3 -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
```

----------------------------------------------------------
ШАГ 3. Настройка файла .env
----------------------------------------------------------
1. В папке проекта есть пример `.env.example`  
2. Скопируйте его и переименуйте в `.env`
3. Откройте `.env` в текстовом редакторе и вставьте свои данные:

```
TELEGRAM_BOT_TOKEN=ВАШ_ТОКЕН_ОТ_BOTFATHER
BITQUERY_API_KEY=ВАШ_КЛЮЧ_BITQUERY   # можно оставить пустым, если нет
BITQUERY_ENDPOINT=https://graphql.bitquery.io
REQUEST_TIMEOUT=25
```

> ⚠️ Если вы не укажете ключ Bitquery, бот будет использовать Etherscan как резервный источник.

----------------------------------------------------------
ШАГ 4. Запуск бота
----------------------------------------------------------
1. Убедитесь, что активировано виртуальное окружение (`.venv`)
2. Выполните команду:
```
python bot.py
```
3. В терминале появится надпись: `Bot started`

----------------------------------------------------------
ШАГ 5. Использование бота
----------------------------------------------------------
1. Откройте Telegram и найдите вашего бота (по имени, выданному @BotFather)
2. Отправьте команду `/start`
3. Для получения списка топ‑адресов — `/topeth`
4. Для проверки источника данных — `/source`
5. Для помощи — `/help`

----------------------------------------------------------
ШАГ 6. Как это работает
----------------------------------------------------------
- При вызове `/topeth` бот сначала пытается получить данные через Bitquery.
- Если Bitquery недоступен, он переходит на Etherscan (парсинг таблицы Top Accounts).
- Бот отправляет список Топ‑200 адресов по ETH в Telegram‑чат, с указанием источника.

----------------------------------------------------------
ШАГ 7. (Дополнительно) Запуск через Docker
----------------------------------------------------------
1. Установите Docker Desktop (или Docker Engine на Linux).
2. В папке проекта выполните:
```
docker build -t eth-top200-bot .
docker run --rm --env-file .env eth-top200-bot
```
3. Бот автоматически запустится внутри контейнера.

----------------------------------------------------------
ШАГ 8. Возможные улучшения
----------------------------------------------------------
- Добавить команду `/csv` для выгрузки Топ‑200 в виде файла.
- Добавить кэширование, чтобы не нагружать источники.
- Расширить до мульти‑цепочного режима (BTC, BNB и др.).

----------------------------------------------------------
ГОТОВО!
Теперь бот будет работать постоянно, пока окно терминала открыто.
Чтобы остановить — нажмите `Ctrl + C`.
----------------------------------------------------------
